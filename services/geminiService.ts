import { GoogleGenAI } from "@google/genai";
import type {
  QuizData,
  ReportData,
  WorkoutPlanApiResponse,
  PendingWorkoutPlan,
  ChatMessage,
} from "../types";

// ✅ Use Vite convention for environment variables
const apiKey = import.meta.env.VITE_GEMINI_API_KEY;

if (!apiKey) {
  console.error("VITE_GEMINI_API_KEY environment variable is not set.");
  throw new Error("VITE_GEMINI_API_KEY environment variable is not set");
}

// ✅ Correct SDK usage
const ai = new GoogleGenAI({ apiKey });

/**
 * Generates a fitness assessment report based on user quiz data.
 */
export const generateAssessmentReport = async (
  quizData: QuizData
): Promise<ReportData> => {
  try {
    const prompt = `
      Act as a certified personal trainer and nutritionist.
      Analyze this user’s data and create a professional, motivational report in markdown format.
      The report should cover: 
      1) Current Snapshot, 2) Daily Nutrition Targets, 
      3) Body Composition, 4) Calories & Burn, 5) Key Issues.

      Data: ${JSON.stringify(quizData, null, 2)}
    `;

    const response = await ai.models.generateContent({
      model: "gemini-2.5-flash",
      contents: prompt,
    });

    const reportText = response.text || "⚠️ Failed to generate report text.";

    return {
      report_markdown: reportText,
      numbers: {
        current_intake_kcal: 0,
        current_burn_kcal: 0,
        calorie_gap_kcal: 0,
      },
      nutrition_targets: {
        recommended_calories_kcal: 0,
        protein_g: 0,
        water_l: 0,
        carbs_g_range: null,
        fats_g_range: null,
      },
      body_comp: {
        estimated_bf_percent: 0,
        bf_ideal_band: [0, 0],
        bf_status: "within",
        estimated_tbw_percent: 0,
        tbw_typical_band: [0, 0],
        tbw_status: "within",
      },
      flags: [],
      methodology: ["Report generated by iFitBot AI."],
    };
  } catch (err) {
    console.error("Gemini API Error in generateAssessmentReport:", err);
    return {
      report_markdown:
        "⚠️ # Failed to generate report.\n\nThe AI service may be temporarily unavailable. Please try again later.",
      numbers: {
        current_intake_kcal: 0,
        current_burn_kcal: 0,
        calorie_gap_kcal: 0,
      },
      nutrition_targets: {
        recommended_calories_kcal: 0,
        protein_g: 0,
        water_l: 0,
        carbs_g_range: null,
        fats_g_range: null,
      },
      body_comp: {
        estimated_bf_percent: 0,
        bf_ideal_band: [0, 0],
        bf_status: "within",
        estimated_tbw_percent: 0,
        tbw_typical_band: [0, 0],
        tbw_status: "within",
      },
      flags: [],
      methodology: [],
    };
  }
};

/**
 * Generates a draft workout plan.
 */
export const generateWorkoutPlan = async (
  reportImage: string | null,
  userName: string,
  quizData: QuizData | null
): Promise<WorkoutPlanApiResponse> => {
  try {
    const prompt = `
      Act as an elite AI performance coach.
      Create a professional and hyper-personalized DRAFT workout plan 
      based on the client's assessment data. 
      The draft will be reviewed by a human trainer.

      Client Name: ${userName}
      Client Data: ${JSON.stringify(quizData, null, 2)}
    `;

    const response = await ai.models.generateContent({
      model: "gemini-2.5-flash",
      contents: prompt,
    });

    const markdownText =
      response.text || "⚠️ Failed to generate workout plan text.";

    return {
      needs_assessment: false,
      cta_copy: null,
      assigned_trainer: { name: "Saieel" },
      extracted_from_report: null,
      workout_guide_draft: null,
      presentation_markdown: markdownText,
      trainer_checklist: [
        "Confirm the plan aligns with client goals.",
        "Check exercise selection for safety and effectiveness.",
      ],
      signature_line: `Draft by iFitBot AI for ${userName}`,
    };
  } catch (err) {
    console.error("Gemini API Error in generateWorkoutPlan:", err);
    return {
      needs_assessment: false,
      cta_copy: null,
      assigned_trainer: null,
      extracted_from_report: null,
      workout_guide_draft: null,
      presentation_markdown:
        "⚠️ # Failed to generate workout plan.\n\nThe AI service may be temporarily unavailable. Please try again later.",
    };
  }
};

/**
 * Gets a response from the trainer assistant chatbot.
 */
export const getTrainerChatbotResponse = async (
  plan: PendingWorkoutPlan,
  chatHistory: ChatMessage[]
): Promise<string> => {
  try {
    const historyText = chatHistory
      .map((m) => `${m.role}: ${m.text}`)
      .join("\n");

    const prompt = `
      You are iFit Coach Ops, a trainer-assist chatbot.
      The trainer is reviewing a plan for a client named "${plan.userName}".
      Analyze the conversation history and answer the trainer's latest query concisely and professionally.

      CONVERSATION HISTORY:
      ${historyText}
    `;

    const response = await ai.models.generateContent({
      model: "gemini-2.5-flash",
      contents: prompt,
    });

    return response.text || "⚠️ No response generated.";
  } catch (err) {
    console.error("Gemini API Error in getTrainerChatbotResponse:", err);
    return "⚠️ Sorry, I encountered an error and cannot respond at the moment.";
  }
};
